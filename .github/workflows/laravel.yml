name: Laravel Tests (Matrix)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: [8.2, 8.3, 8.4]
        dependency-version: [prefer-lowest, prefer-stable]

    name: PHP ${{ matrix.php-version }} - ${{ matrix.dependency-version }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, dom, fileinfo, mysql, zip, bcmath, gd, sqlite3
        coverage: xdebug

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Get Composer Cache Directory
      id: composer-cache
      run: |
        echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}-${{ matrix.dependency-version }}
        restore-keys: |
          ${{ runner.os }}-composer-${{ matrix.dependency-version }}-
          ${{ runner.os }}-composer-

    - name: Install dependencies
      run: |
        if [[ "${{ matrix.dependency-version }}" == "prefer-lowest" ]]; then
          composer update --prefer-lowest --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        else
          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        fi

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Create SQLite Database
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit --coverage-text

  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql
        tools: phpcs, phpstan

    - name: Get Composer Cache Directory
      id: composer-cache
      run: |
        echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Install dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Run PHP CodeSniffer
      run: |
        if [ -f phpcs.xml ] || [ -f phpcs.xml.dist ]; then
          ./vendor/bin/phpcs --standard=PSR12 app tests
        else
          echo "No phpcs.xml found, skipping PHP CodeSniffer"
        fi

    - name: Run PHPStan
      run: |
        if [ -f phpstan.neon ] || [ -f phpstan.neon.dist ]; then
          ./vendor/bin/phpstan analyse
        else
          echo "No phpstan.neon found, skipping PHPStan"
        fi